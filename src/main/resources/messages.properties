Config.fileMissing=Configuration filename is not specified
Config.errorPropertiesLoad=Error loading configuration from properties file: {0}
Config.errorParameterLoad=Error loading parameter: {0} of type: {1}
Config.errorParameterSave=Error saving parameter: {0} of type: {1}
Config.errorSecurityInit=Error initializing encryption for key file {0}: {1}
Config.errorEncryptionKeyFileInit=Error loading encryption key file {0}: {1}
Config.errorNoRequiredParameter=Required parameter {0} is unspecified or empty
LastRun.fileMissing=Last run filename is not specified
LastRun.errorLoading=Error loading last run file {0}: {1}
LastRun.fileInfo=Last run info will be saved in file: {0}
Process.initializingEngine=Initializing process engine
Process.settingFieldTypes=Setting field types
Process.settingReferenceTypes=Setting object reference types
Process.versionMessage=Process engine is only compatible with Java version: {0} and up
Process.help1=Help for Apex Data Loader Process Runner
Process.help2=To use, specify a configuration directory by setting -Dsalesforce.config.dir as a java parameter
Process.help3=Also, you can specify process name from process-conf.xml, as process.name=AccountInsert
Process.help4=For instance 'java -classpath DataLoader.jar com.salesforce.dataloader.process.ProcessRunner process.name=AccountInsert'
Process.help5=If process.name is not specified, config.properties will be used with optionally set individual paramenters as arguments to the ProcessRunner class
Process.help6=For instance 'java -classpath DataLoader.jar com.salesforce.dataloader.process.ProcessRunner process.operation=insert sfdc.loadBatchSize=200'
Process.loginError=Unable to log in. Exiting.
Process.loadingParameters=Loading parameters
Process.loggingIn=Logging in to: {0}
Process.openingDao=Opening the data access object
Process.checkingDao=Checking the data access object connection
Process.errorDaoOpen=Unable to open Data Access Object.
Process.creatingMap=Creating Map
Process.aboutPerform=About to perform: {0}
Process.missingRequiredArg=Missing required argument: {0}
Action.loading=Loading: {0}
Action.logCanceled=Load was canceled.
Action.exception=Exception occured during loading
Action.logSuccess=Load completed successfully.
Action.success=The operation has fully completed.  There were {0} successful {1}s and {2} errors.
AbstractExtractAction.success=The operation has fully completed.  There were {0} successful extractions and {2} errors.
Action.cancel=The operation was cancelled.  There were {0} successful {1}s and {2} errors.
Action.error=Load finished with an error. Please check the log.
Action.errorDaoStartRow=Can't read from dao when calulating start row
Action.errorLastRun=Can't save last run info
RowToStartUtil.errorDaoStartRow=Can't read from dao when calculating start row
RowToStartUtil.errorLastRun=Can't save last run info
Action.errorOpeningErrorFile=Error opening error status file: {0}
Action.errorOpeningSuccessFile=Error opening success status file: {0}
Action.errorMissingErrorFile=Error initializing error status file: empty filename is specified.
Action.errorMissingSuccessFile=Error initializing success status file: empty filename is specified.
BulkLoadAction.loading=Loading Using Bulk API: {0}
BulkLoadVisitor.noFieldVal=No value provided for field: {0}
BulkApiVisitorUtil.logJobCreated=Created Bulk API Job: {0}
BulkLoadVisitor.logBatchInfoWithMessage=BatchInfo: {0} - {1}.  State Message: "{2}"
BulkLoadVisitor.retrievingResults=Retrieving Bulk Job Results
BulkLoadVisitor.errorOutOfSync=Local and remote rows out of sync.  Result files are invalid.
BulkLoadVisitor.batchError=Not processed due to batch error: {0}
BulkApiVisitorUtil.logBatchLoaded=Created Bulk API Batch: {0}
BulkLoadVisitor.deleteCsvError=Delete operations can only have a single column of IDs.
BulkLoadVisitor.hardDeleteNoPerm=You need the Bulk API Hard Delete user permission to permanently delete records.
JobState.debugSaveBatch=Saving active batch: {0}
BulkApiVisitorUtil.logJobStatus=Batch Status: {0} Queued, {1} In Progress, {2} Completed, {3} Failed.
RowUtil.error=Error Calculating Total Rows
RowUtil.warningDuplicateColumn=A duplicate column [{0}] is found
RowUtil.warningEmptyColumn=An empty column is found
AbstractExtractAction.errorOpeningErrorFile=Error opening error file: {0}
AbstractExtractAction.errorOpeningSuccessFile=Error opening success file: {0}
AbstractExtractAction.errorMissingErrorFile=Error initializing error status file: empty filename is specified.
AbstractExtractAction.errorMissingSuccessFile=Error initializing success status file: empty filename is specified.
AbstractExtractAction.errorHeader=Error getting Extract columns from query: {0}
AbstractExtractAction.errorMissingSelect=Error in query: missing [select ]: {0}
AbstractExtractAction.errorMissingFrom=Error in query: missing [ from ]: {0}
AbstractExtractAction.errorInvalidFieldName=Error in query: invalid field name [{0}] in query string: {1}
AbstractExtractAction.errorMalformedQuery=Error in query: Malformed query string: {0}
AbstractExtractAction.errorEmptyQuery=Error in query: query is empty
LoadRateCalculator.processed=Processed {0} of {1} total records. Rate: {2} records per hour. Estimated time to complete: {3} minutes and {4} seconds.  There are {5} successes and {6} errors.
LoadRateCalculator.processedTimeUnknown=Processed {0} total records. Rate: {1} records per hour. There are {2} successes and {3} errors.
Visitor.emptyRowIgnored=Item #: {0} will not be loaded due to the empty input data
Visitor.conversionException=Conversion Exception, writing to errors.csv
Visitor.conversionErrorMsg=Error converting value to correct data type: {0}
Visitor.dynaBeanError=Dyna Bean error
Visitor.invocationError=Invocation Target error
Visitor.noErrorReceivedMsg=NO ERROR MESSAGE RECEIVED
Visitor.errorResultsLength=Results length must be the same as the data.  Stopping output writer.
SforceDynaBean.errorCreatingDynaBean=Error creating DynaBean for salesforce object {0}
AbstractQueryVisitor.noneReturned=No Records Returned
AbstractQueryVisitor.extracting=Extracting
AbstractQueryVisitor.errorNoResults=No results from query result
AbstractQueryVisitor.errorGettingBatchSize=Error getting data access object write batch size, using default value: {0}.  Error: {1}
AbstractQueryVisitor.statusItemQueried=Item queried and written successfully
AbstractQueryVisitor.statusErrorNotWritten=Failed to write item to data access object: {0}
AbstractQueryVisitor.statusErrorNotWrittenException=Failed to write item to data access object: {0}.  Error: {1}
ClientBase.emptyUsername=Empty salesforce.com username specified.  Please make sure that parameter {0} is set to correct username.
Client.invalidEndpoint=Invalid salesforce.com endpoint URL specified: {0}
Client.targetError=Error in Target text, check the value.
Client.bindingError=Error creating binding to soap service, error was: {0}
Client.sforceLogin=Beginning Partner Salesforce login ....
PartnerClient.sforceLoginDetail=Salesforce login to {0} as user {1}
Client.sforceLoginProxyDetail=Salesforce login will use proxy host: {0} port: {1}
Client.sforceLoginProxyUser=Salesforce login will use proxy user: {0}
Client.sforceLoginProxyPassword=Salesforce login will use proxy password from settings
Client.sforceLoginProxyNtlm=Salesforce login will use proxy NTLM domain: {0}
Client.fieldsError=Error getting Fields
Client.arraySize=Object array size to be loaded:
Client.resultNull=Save Result Null
Client.itemError=Errors were found on item
Client.errorCode=Error code is:
Client.errorMessage=Error message:
ClientBase.loginError=Error while logging in to web service at: {0}, error was: {1}
Client.operationError=Error while calling web service operation: {0}, error was: {1}
Client.beginOperation=Beginning web service operation: {0}
Client.invalidLocator=Query Locator is Invalid
Client.exception=Exception occurred
Client.itemUpdated=An entity was updated with an id of:
Client.itemUpserted=An entity was updated with an id of:
Client.itemMerged=An entity was merged with an id of:
Client.itemDeleted=An entity was deleted with an id of:
Client.itemUndeleted=An entity was undeleted with an id of:
Client.itemCreated=An entity was created with an id of:
Client.errorExpiredPassword=User has expired password
Client.errorMsgDebugFilename=Error debugging SOAP messages to file {0}: file does not exist
Client.retryOperation=Starting retry#{0} of operation {1} after sleeping for {2} seconds
Controller.executeStart=executing operation: {0}
Controller.errorFieldTypes=Client not logged in. Cannot set Field Types.
Controller.errorReferenceTypes=Client not logged in. Cannot set Object Reference Types.
Controller.errorEntityTypes=Client not logged in. Cannot set Entity Types.
Controller.errorConfigWritable=Please make sure that the config file: {0} exists and is writable.
Controller.errorConfigSave=Error saving config file: {0}.  Please make sure that it is writable.
Controller.errorConfigLoad=Error loading config file: {0}.  Please make sure that it exists and is readable
Controller.errorOperationNotSupported=Requested operation: {0} is not supported.  Please check your configuration.  Supported operations are: insert, update, upsert, delete, extract.
Controller.logInit=The log has been initialized
Controller.configInit=The controller config has been initialized
Controller.errorLogInit=Logger Configuration failed.  Exiting Application
Controller.errorDatabaseNotSupportedInTheUI=Error getting database configuration.  The database connectivity is only supported in command line version.
Controller.errorDAOCreate=Error creating data access object
Controller.errorOperationInfoLoad=Error loading custom action configuration.  Custom actions will not be available for execution.
Controller.errorDaoFactoryLoad=Error loading custom data access object configuration.  Custom data access objects will not be available for execution.
Controller.loadingFactoryConfig=Loading action configuration from config file: {0}
Controller.errorLoadingFactoryConfig=Error loading: {0} configuration from the configuration file: {1}
Controller.errorCreatingOutputDir=Error creating output directory: {0}
Controller.invalidOutputDir=Invalid output directory specified: {0}.  Please make sure that the directory exists and has a write permission.
Controller.errorFileCreate=Error creating file: {0}
Controller.errorFileWrite=Error writing to file: {0}.  Please make sure that the file has a write permission.
Controller.errorSameFile=Data access CSV: {0} is the same as the output file: {1}
CSVWriter.errorOpening=Error opening file writer for file: {0}
CSVWriter.errorClosing=Error closing writer
CSVWriter.errorWriting=Error writing row
CSVChooser.noSucessOrErrorFile=An insert or update process must be executed first in order to open this file
Mapper.errorLoad=Error loading mapping file: {0}
Mapper.errorFileName=File name not specified
DAOLoadVisitor.statusItemCreated=Item Created
DAOLoadVisitor.statusItemUpdated=Item Updated
DAOLoadVisitor.statusItemDeleted=Item Deleted
BulkLoadVisitor.statusItemHardDeleted=Item Hard Deleted
Action.errorWrongDao=Wrong type of data access object encountered: {0} expecting: {1} for operation: {2}
DatabaseDAO.errorConfigFileExists=Error loading database configuration file {0}: make sure it exists and is readable
DatabaseDAO.sqlExceptionConnect=Database error encountered during connecting for database configuration: {0}.  Sql error: {1}.
DatabaseDAO.sqlExceptionConnClose=Database error encountered during closing the connection for database configuration: {0}.  Sql error: {1}.
DatabaseDAO.sqlExceptionSetup=Database error encountered during setup of the database configuration: {0}.  Sql error: {1}.
DatabaseDAO.sqlExceptionPrepareStatement=Error creating PreparedStatement for the database configuration {0}.  Sql error: {1}
DatabaseDAO.sqlExceptionReadRow=Error encounted trying to get value for column: {0} for row #{1} (database execute query). Database configuration: {2}.  Error: {3}.
DatabaseDAO.sqlExceptionPrepareRow=Database error encountered while preparing row #{0} for writing row #{1} through row #{2}. Database configuration: {3}.  Sql error: {4}.
DatabaseDAO.exceptionPrepareRow=Database error encountered while preparing row #{0} for writing row #{1} through row #{2}. Database configuration: {3}.  Error: {4}.
DatabaseDAO.sqlExceptionWriteRow=Database error encountered while writing row #{0} through row #{1} (execute batch update). Database configuration: {2}.  Sql error: {3}.
DatabaseDAO.sqlExceptionRollback=Database error encountered while rolling back row #{0} through row #{1}. Database configuration: {2}.  Sql error: {3}.
DatabaseDAO.exceptionReadRow=Error encounted trying to get value for column: {0} for row #{1} (database execute query). Database configuration: {2}.  Error: {3}.
DatabaseDAO.exceptionWriteRow=Error encounted trying to update row #{0} through row #{1} (database execute batch update). Database configuration: {2}.  Error: {3}.
DatabaseDAO.sqlExceptionParamReplace=Error creating PreparedStatement for the database configuration {0}.  Error replacing parameter: {1} with value: {2} of type: {3}.  Sql error: {4}.
DatabaseDAO.errorSqlParamReplace=Error replacing SQL parameter: trouble getting value for config param: {0} of type: {1} for the database configuration {2}.
DatabaseDAO.errorParamMissing=Error getting value for SQL parameter: {0}.  Please make sure that the value exists in the configuration file or is passed in.  Database configuration: {1}.
DatabaseDAO.sqlParamInfo=SQL using parameter value {0} = {1}
DatabaseDAO.errorParamMapping=Error mapping parameter value {0} of type {1} to SQL type {2}.  Error: {3}
DatabaseDAO.errorParamMappingType=Unexpected type {0}
DatabaseDAO.updatedStatus=Successfully updated {0} of {1} total updated rows in the database
DatabaseDAO.errorUpdateNotOpen=Error updating a row: the update not initialized
DatabaseDAO.errorGettingBatchSize=Error getting data access object read batch size, using default value: {0}.  Error: {1}
CSVFileDAO.errorOpen=File: {0} not found.  Open failed.
CSVFileDAO.errorUnsupportedEncoding=Unsupported Encoding.  Open operation failed.
CSVFileDAO.errorHeaderRow=Error getting header row from the CSV file.
CSVFileDAO.errorOpenNoHeaderRow=Error opening CSV file for writing: header row (with column names) has to be provided
CSVFileDAO.errorInitializing=Initialization of CSV FAILED.
CSVFileDAO.errorRowTooLarge=Error reading row #{0}: the number of data columns ({1}) exceeds the number of columns in the header ({2})
ProcessConfig.loadingConfig=Loading process configuration from config file: {0}
ProcessConfig.errorNoProcess=Error loading process: {0} configuration from config file: {1}
OperationInfo.loadingConfig=Loading action configuration from config file: {0}
OperationInfo.errorOperationInstantiation=Error instantiating operation {0}: could not instantiate class: {1}.
OperationInfo.createAction=Instantiating action for operation: {0}
OperationInfo.creatingWizard=Instantiating wizard: {0}
DataAccessObjectFactory.errorDaoInstantiation=Error instantiating data access object {0}: error getting class: {1}.  Please make sure a correct class is defined and accessible for the data access object.
DataAccessObjectFactory.errorDaoNoConstructor=Error instantiating data access object {0}: constructor: {1} has to be implemented
DataAccessObjectFactory.errorInterfaceNotImplemented=Error instantiating data access object {0}: interface DataAccessObject has to be implemented
DataAccessObjectFactory.errorDaoConstructorCall=Error instantiating data access object {0} using constructor: {1}
DataAccessObjectFactory.daoTypeNotSupported=The specified data access object type: {0} is not supported
DataAccessObjectFactory.creatingDao=Instantiating data access object: {0} of type: {1}
FinishPage.cannotMapBase64ForBulkApi=Data Loader cannot map "{0}" field using Bulk API and CSV content type.  Please enable the ZIP_CSV content type for Bulk API.