<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.force</groupId>
  <artifactId>dataloader</artifactId>
  <packaging>jar</packaging>
  <version>54.0.0</version>
  <name>Data Loader</name>
  <url>https://github.com/forcedotcom/dataloader</url>
  <organization>
    <name>salesforce.com</name>
    <url>http://salesforce.com</url>
  </organization>

  <properties>
    <force.wsc.version>54.0.0</force.wsc.version>
    <force.partner.api.version>${force.wsc.version}</force.partner.api.version>
    <build.year>2021</build.year>
    <java.compile.version>11</java.compile.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <config.additional.properties></config.additional.properties>
    <swt.version>4.22</swt.version>

    <!-- test properties -->
    <test.endpoint>http://testendpoint</test.endpoint>
    <test.user.default>admin@org.com</test.user.default>
    <test.user.restricted>standard@org.com</test.user.restricted>
    <test.password></test.password><!-- use the encrypted password -->
    <test.redirect>false</test.redirect>
    <test.testfiles.directory>${project.build.testOutputDirectory}/testfiles</test.testfiles.directory>
  </properties>

  <repositories>
    <repository>
      <id>local-proj-repo</id>
      <name>Project Local Repository</name>
      <layout>default</layout>
      <url>file://${basedir}/local-proj-repo/</url>
    </repository>
    <repository>
      <id>maven-eclipse-repo</id>
      <url>https://maven-eclipse.github.io/maven</url>
    </repository>
  </repositories>

  <dependencies>
<!-- Runtime dependencies -->
<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.9</version>
    </dependency>
    <dependency>
      <groupId>com.force.api</groupId>
      <artifactId>force-wsc</artifactId>
      <version>${force.wsc.version}</version>
      <exclusions>
      	<exclusion>
      		<groupId>commons-logging</groupId>
      		<artifactId>commons-logging</artifactId>
      	</exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.force.api</groupId>
      <artifactId>force-partner-api</artifactId>
      <version>${force.partner.api.version}</version>
    </dependency>
<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-dbcp2</artifactId>
      <version>2.9.0</version>
      <exclusions>
      	<exclusion>
      		<groupId>commons-logging</groupId>
      		<artifactId>commons-logging</artifactId>
      	</exclusion>
      </exclusions>
    </dependency>
<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.11.0</version>
    </dependency>
<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.17.1</version>
    </dependency>
<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.17.1</version>
    </dependency>
<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.13</version>
      <exclusions>
      	<exclusion>
   	  <groupId>commons-logging</groupId>
      	  <artifactId>commons-logging</artifactId>
      	</exclusion>
      </exclusions>
    </dependency>
<!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>5.3.14</version>
    </dependency>
<!-- https://mvnrepository.com/artifact/org.eclipse.platform/org.eclipse.jface --> 
    <dependency>
      <groupId>org.eclipse.platform</groupId>
      <artifactId>org.eclipse.jface</artifactId>
      <version>3.24.0</version>
      <exclusions>
        <exclusion>
          <groupId>org.eclipse.platform</groupId>
          <artifactId>org.eclipse.swt</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

<!-- Testing dependencies -->
<!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>2.0.206</version>
      <scope>test</scope>
    </dependency>
<!-- https://mvnrepository.com/artifact/junit/junit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>
<!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>5.3.14</version>
      <scope>test</scope>
    </dependency>
<!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>4.2.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>install</defaultGoal>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.properties</include>
        </includes>
        <excludes>
          <exclude>**/*.swp</exclude>
          <exclude>**/*.*~*</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>**/*.properties</exclude>
          <exclude>**/*.swp</exclude>
          <exclude>**/*.*~*</exclude>
        </excludes>
      </resource>
    </resources>

    <filters>
      <filter>src/test/resources/testfilter.properties</filter>
    </filters>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <plugins>
<!-- https://mvnrepository.com/artifact/org.codehaus.mojo/versions-maven-plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.8.1</version>
      </plugin>
<!-- plugins inherited from parent whose version needs to be specified
     to clear mvn versions:display-plugin-updates
 -->
<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-clean-plugin -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-clean-plugin</artifactId>
      <version>3.1.0</version>
    </plugin>
<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-deploy-plugin -->
	<plugin>
	  <groupId>org.apache.maven.plugins</groupId>
	  <artifactId>maven-deploy-plugin</artifactId>
	  <version>3.0.0-M1</version>
	</plugin>
<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-install-plugin -->
	<plugin>
	  <groupId>org.apache.maven.plugins</groupId>
	  <artifactId>maven-install-plugin</artifactId>
	  <version>3.0.0-M1</version>
	</plugin>
<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
	<plugin>
	  <groupId>org.apache.maven.plugins</groupId>
	  <artifactId>maven-jar-plugin</artifactId>
   <version>3.2.0</version>
	</plugin>
<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-site-plugin -->
	<plugin>
	  <groupId>org.apache.maven.plugins</groupId>
	  <artifactId>maven-site-plugin</artifactId>
	  <version>3.9.1</version>
	</plugin>

<!-- plugins explicitly included in the project -->
<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-enforcer-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.6</version>
                </requireMavenVersion>
              </rules>    
            </configuration>
          </execution>
        </executions>
      </plugin>
<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
            <useDefaultDelimiters>false</useDefaultDelimiters>
            <delimiters>
              <delimiter>${*}</delimiter>
            </delimiters>
            <nonFilteredFileExtensions>
              <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
              <nonFilteredFileExtension>swf</nonFilteredFileExtension>
              <nonFilteredFileExtension>jpeg</nonFilteredFileExtension>
              <nonFilteredFileExtension>jpg</nonFilteredFileExtension>
              <nonFilteredFileExtension>png</nonFilteredFileExtension>
            </nonFilteredFileExtensions>
        </configuration>
      </plugin>
        
<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>${java.compile.version}</source>
          <target>${java.compile.version}</target>
          <forceJavacCompilerUse>true</forceJavacCompilerUse>
          <compilerArgs>
            <!-- <arg>-verbose</arg> -->
          </compilerArgs>
        </configuration>
      </plugin>

<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M5</version>
          <dependencies>
<!-- https://mvnrepository.com/artifact/org.apache.maven.surefire/surefire-junit4 -->
              <dependency>
                  <groupId>org.apache.maven.surefire</groupId>
                  <artifactId>surefire-junit4</artifactId>
                  <version>3.0.0-M5</version>
              </dependency>
          </dependencies>
        <configuration>
          <excludes>
            <!-- CORE UNIT TESTS: revise to keep this list fast and connectivity free -->
            <exclude>**/client/**</exclude>
            <exclude>**/dyna/SObjectReferenceConverterTest.*</exclude>
            <exclude>**/integration/**</exclude>
            <exclude>**/mapping/LoadMapperTest.*</exclude>
            <exclude>**/mapping/SOQLMapperTest.*</exclude>
            <exclude>**/process/**</exclude>
          </excludes>
        </configuration>
      </plugin>

<!-- https://mvnrepository.com/artifact/com.mycila/license-maven-plugin -->
      <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>4.1</version>
          <configuration>
            <licenseSets>
              <licenseSet>
              <header>license.txt</header>
              <includes>
                  <include>**/*.java</include>
              </includes>
                <properties>
                  <strictChecking>true</strictChecking>
                </properties>
              </licenseSet>
            </licenseSets>
          </configuration>
          <executions>
              <execution>
                  <phase>package</phase>
                  <goals>
                      <goal>check</goal>
                  </goals>
              </execution>
          </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>mac_x86_64</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>local.swt</groupId>
          <artifactId>swtmac_x86_64</artifactId>
          <version>${swt.version}</version>
        </dependency>
      </dependencies>
      <properties>
          <OSType>mac</OSType>
          <targetOS>mac_x86_64</targetOS>
      </properties>
    </profile>

    <profile>
      <id>win32_x86_64</id>
      <activation>
        <os>
          <family>Windows</family>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>local.swt</groupId>
          <artifactId>swtwin32_x86_64</artifactId>
          <version>${swt.version}</version>
        </dependency>
      </dependencies>
      <properties>
          <OSType>win</OSType>
          <targetOS>win32_x86_64</targetOS>
      </properties>
    </profile>
    
    <profile>
      <id>linux_x86_64</id>
      <activation>
        <os>
          <family>linux</family>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>local.swt</groupId>
          <artifactId>swtlinux_x86_64</artifactId>
          <version>${swt.version}</version>
        </dependency>
      </dependencies>
      <properties>
          <OSType>linux</OSType>
          <targetOS>linux_x86_64</targetOS>
      </properties>
    </profile>
    
    <profile>
      <id>uberjar</id>
      <activation>
        <property><name>!uberjar.skip</name></property>
      </activation>
      <build>
        <plugins>
          <!-- we might want to use the maven-shade-plugin in the future instead 
               of maven-assembly-plugin -->
<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-assembly-plugin -->
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>3.3.0</version>
            <configuration>
              <archive>
                <manifest>
                  <mainClass>com.salesforce.dataloader.process.DataLoaderRunner</mainClass>
                </manifest>
              </archive>
              <descriptors>
                <descriptor>src/main/assembly/uber.xml</descriptor>
              </descriptors>
            </configuration>
	        <executions>
	          <execution>
	            <id>make-uber-jar</id>
	            <phase>package</phase>
	            <goals>
	              <goal>single</goal>
	            </goals>
	          </execution>
	        </executions>
	      </plugin>

<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-antrun-plugin -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <phase>compile</phase>
                <configuration>
                  <target>
                    <ant antfile="${basedir}/extractSWTJar.xml" inheritAll="true" />
                    <delete includeEmptyDirs="true">
                      <dirset dir="${basedir}/target/">
                        <patternset>
                          <include name="**/${swt.version}"/>
                         </patternset>
                      </dirset>
                    </delete>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
	        <dependencies>
<!-- https://mvnrepository.com/artifact/ant-contrib/ant-contrib -->
              <dependency>
              <groupId>ant-contrib</groupId>
              <artifactId>ant-contrib</artifactId>
              <version>1.0b3</version>
              <exclusions>
                <exclusion>
                  <groupId>ant</groupId>
                  <artifactId>ant</artifactId>
                </exclusion>
              </exclusions>
            </dependency>
          </dependencies>
	      </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>zip</id>
      <build>
        <plugins>
<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-antrun-plugin -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <configuration>
                  <target>
                    <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>
                    <echo>creating version-specific files for the target OS: ${OSType}</echo>
					<delete dir="${basedir}/target/${OSType}"/>
                    <mkdir dir="${basedir}/target/${OSType}"/>
                    <copy todir="${basedir}/target/${OSType}">
                      <fileset dir="${basedir}/release/${OSType}"/>
                    </copy>
                    <copy todir="${basedir}/target/${OSType}/configs">
                      <fileset dir="${basedir}/release/configs"/>
                    </copy>
                    <copy todir="${basedir}/target/${OSType}/samples">
                      <fileset dir="${basedir}/release/samples"/>
                    </copy>
                    <copy file="${basedir}/release/configs/log-conf.xml" 
                        todir="${basedir}/target/${OSType}/samples/conf"/>
                    <replace dir="${basedir}/target/${OSType}/" token="@@FULL_VERSION@@" value="${project.version}"/>
                    <replace dir="${basedir}/target/${OSType}/" token="@@MIN_JAVA_VERSION@@" value="${java.compile.version}"/>
                    <chmod file="${basedir}/target/${OSType}/*" perm="755" />
    
                    <echo>copying uber jar to OS-specific folder for the target OS: ${OSType}</echo>
                    <copy file="${basedir}/target/dataloader-${project.version}-uber.jar" 
                       todir="${basedir}/target/${OSType}"/>
                       
                    <copy todir="${basedir}/target/${OSType}" >
                      <fileset dir="${basedir}/target/" includes="swt${OSType}*/*"/>
                    </copy> 
                    <echo>zip OS-specific folder</echo>
                    <zip update="true" destfile="${basedir}/target/${OSType}/dataloader_${OSType}.zip" >
                      <zipfileset dirmode="755" filemode="755" 
                        dir="${basedir}/target/${OSType}" />
                     </zip>
                   </target>
                </configuration>
                <id>package</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
             </execution>
            </executions>
            <dependencies>
<!-- https://mvnrepository.com/artifact/ant-contrib/ant-contrib -->
              <dependency>
              <groupId>ant-contrib</groupId>
              <artifactId>ant-contrib</artifactId>
              <version>1.0b3</version>
              <exclusions>
                <exclusion>
                  <groupId>ant</groupId>
                  <artifactId>ant</artifactId>
                </exclusion>
              </exclusions>
            </dependency>
          </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    
<!-- "integration-test" profile declares surefire-plugin again with fewer exclusions
      than surefire-plugin declaration run during test phase, thereby ensuring that
      "mvn test" runs unit tests whereas "mvn test -Pintegration-test" runs all
      tests.
 -->
    <profile>
      <id>integration-test</id>
      <build>
        <plugins>
<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>3.0.0-M5</version>
            <dependencies>
<!-- https://mvnrepository.com/artifact/org.apache.maven.surefire/surefire-junit4 -->
              <dependency>
                <groupId>org.apache.maven.surefire</groupId>
                <artifactId>surefire-junit4</artifactId>
                <version>3.0.0-M5</version>
              </dependency>
            </dependencies>
            <configuration>
              <excludes>
                <!-- INTEGRATION UNIT TESTS: revise to remove works in progress -->
                <exclude>**/integration/**</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
